# Tests all HTTP methods

openapi-httprequest api.yaml
cmp api-params.go expect-api-params.go

-- api.yaml --
openapi: 3.0.0
info:
  description: test service description
  title: test service
  version: 1.0.0
paths:
  /test:
    get:
      description: Get test data (description)
      operationId: GetTestData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestDataResponse'
      summary: Get test data
    post:
      description: Post test data (description)
      operationId: PostTestData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestDataResponse'
      summary: Post test data
    put:
      description: Put test data (description)
      operationId: PutTestData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestDataResponse'
      summary: Put test data
    delete:
      description: Delete test data (description)
      operationId: DeleteTestData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestDataResponse'
      summary: Delete test data
components:
  schemas:
    GetTestDataResponse:
      properties:
        body:
          description: get test data response body
          type: string
      type: object

-- expect-api-params.go --
// Code generated by openapi-httprequest. DO NOT EDIT.

package params

import (
	httprequest "gopkg.in/httprequest.v1"
)

type APIHandler interface {
	DeleteTestData(httprequest.Params, *DeleteTestDataRequest) (*GetTestDataResponse, error)
	GetTestData(httprequest.Params, *GetTestDataRequest) (*GetTestDataResponse, error)
	PostTestData(httprequest.Params, *PostTestDataRequest) (*GetTestDataResponse, error)
	PutTestData(httprequest.Params, *PutTestDataRequest) (*GetTestDataResponse, error)
}

type GetTestDataResponse struct {
	Body string `json:"body"`
}

type DeleteTestDataRequest struct {
	httprequest.Route `httprequest:"DELETE /test"`
}

type GetTestDataRequest struct {
	httprequest.Route `httprequest:"GET /test"`
}

type PostTestDataRequest struct {
	httprequest.Route `httprequest:"POST /test"`
}

type PutTestDataRequest struct {
	httprequest.Route `httprequest:"PUT /test"`
}
